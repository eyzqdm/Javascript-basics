/* js基本数据类型与引用数据类型与深浅拷贝*/
/* 1.栈，队列，堆 */
/* 2.基本数据类型与引用数据类型
    js中有6种基本数据类型,Number、String、Boolean、Null、 Undefined以及es新增的Symbol
    基本数据类型是直接存放在栈中的简单数据段，单独分配内存空间，可以按值访问。
    而相对的引用数据类型（Object）的值由于大小不固定，因此存放在堆内存中，按引用访问。
    即我们不能直接操作堆内存中的值，在操作对象时，实际操作的是对象的引用而不是存在堆中的值。
    所谓引用，可以理解为与存在堆中的每个值相对应的一个地址，通过该地址我们可以找到这个值。
  3.变量的复制
    基本类型的复制，系统会为新声明的变量分配内存，这意味着赋值完成后，复制与被复制的变量除了值一样外，毫无关系。
    而引用对象则不同，其复制只是引用的复制，即新的值也是一个指针，它同样指向堆内存中的值。两个指针尽管相互独立，
    但他们指向的值确是一样的。因此当通过其中一个指针改变堆内存中的值，另一个指针的值也会发生变化。
    下面通过例子印证一下。
  
 */

let a = 2
let b = a
b = 3
console.log(a,b)//2,3
let obj1 = {
    name:'小名',
    age:18
}
let obj2 = obj1
obj2.name = '小红'
console.log(obj1) // { name: '小红', age: 18 }